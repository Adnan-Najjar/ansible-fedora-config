- hosts: localhost
  connection: local
  roles:
    - role: roles/luizgavalda.gnome_extensions
      vars:
        gnome_extension_ids:
          - 19 # User Themes
          - 6997 # Athan Times
          - 3193 # Blur My Shell
          - 3628 # ArcMenu
          - 517 # Caffeine
          - 5416 # Wifi QR Code
          - 615 # AppIndicator
          - 779 # Clipboard Indicator
          - 7855 # Dash in Panel

  tasks:
    - name: Check if dnf.conf exists
      stat:
        path: /etc/dnf/dnf.conf
      register: dnf_conf

    - name: Make dnf faster
      become: true
      blockinfile:
        path: /etc/dnf/dnf.conf
        block: |
          max_parallel_downloads=20
          fastestmirror=True
      when: dnf_conf.stat.exists

    - name: Enable the Starship COPR repository
      become: true
      community.general.copr:
        name: atim/starship
        state: enabled

    - name: Install packages
      become: true
      package:
        name:
          - htop
          - gnome-tweaks
          - starship
          - papirus-icon-theme
          - dconf
          - zsh
          - fastfetch
          - neovim
          - ripgrep
          - bat
          - tmux
          - fzf
          - zoxide
          - zsh-autosuggestions
          - zsh-syntax-highlighting
          - tldr
          - trash-cli
          - tesseract
          - gnome-screenshot
          - flatpak
          - dnf5-plugin-automatic
          - chafa
          - go
          - rust
          - cargo
        state: latest
        allowerasing: true

    - name: Install htmlq and eza
      community.general.cargo:
        state: latest
        name: 
          - htmlq
          - eza

    - name: Create config file for dnf5-automatic
      become: true
      copy:
          src: files/dnf5-automatic.conf
          dest: /etc/dnf/automatic.conf
          owner: root
          group: root
          mode: '0644'

    - name: Enable and Start dnf automatic updates
      become: true
      systemd_service:
        name: dnf5-automatic.timer
        state: started
        enabled: true

    - name: Remove unwanted applications
      become: true
      package:
        name:
          - gnome-classic-session
          - gnome-shell-extension-background-logo
          - gnome-shell-extension-window-list
          - gnome-shell-extension-apps-menu
          - gnome-shell-extension-common
          - gnome-shell-extension-launch-new-instance
          - gnome-shell-extension-places-menu
          - gnome-user-docs
          - gnome-tour
          - libreoffice*
          - unoconv
        autoremove: true
        state: absent

    - name: Add Flathub repository
      become: true
      command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

    - name: Install Flatpak applications
      become: true
      command: flatpak install -y flathub {{ item }}
      loop:
        - md.obsidian.Obsidian
        - com.mattjakeman.ExtensionManager
        - app.zen_browser.zen
        - org.onlyoffice.desktopeditors

    - name: Copy wallpaper file
      become: true
      copy:
        src: files/wallpaper.png
        dest: /usr/share/backgrounds/wallpaper.png
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Apply GNOME settings
      become: true
      copy:
        src: files/dconf.ini
        dest: /etc/dconf/db/local.d/dconf.ini
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"

    - name: Ensure Neovim config directory exists
      become: false
      file:
        path: "/home/{{ ansible_user_id }}/.config/nvim"
        state: directory
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0755'

    - name: Check if Zen browser profile is created
      become: false
      stat:
        path: "/home/{{ ansible_user_id }}/.var/app/app.zen_browser.zen/.zen"
      register: zen_dir

    - name: Create Zen browser default profile if not created
      become: false
      command: timeout 5 flatpak run app.zen_browser.zen --headless
      ignore_errors: true
      when: zen_dir.stat.exists == false

    - name: Get Zen browser default profile path
      become: false
      find:
        paths: "/home/{{ ansible_user_id }}/.var/app/app.zen_browser.zen/.zen"
        pattern: "*release*"
        file_type: "directory"
      register: zen_profile
      when: zen_dir.stat.exists == true

    - name: Setup zen-browser, git, zsh, tmux and neovim configrations
      become: false
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
      loop:
        - { src: 'files/zen-browser/', dest: "{{ zen_profile.files[0].path }}/" }
        - { src: 'files/bin', dest: "/home/{{ ansible_user_id }}/.local/" }
        - { src: 'files/gitconfig', dest: "/home/{{ ansible_user_id }}/.gitconfig" }
        - { src: 'files/zshrc', dest: "/home/{{ ansible_user_id }}/.zshrc" }
        - { src: 'files/tmux', dest: "/home/{{ ansible_user_id }}/.tmux.conf" }
        - { src: 'files/nvim', dest: "/home/{{ ansible_user_id }}/.config/nvim/init.lua" }

    - name: Change default shell to Zsh
      become: true
      user:
        name: "{{ ansible_user_id }}"
        shell: /bin/zsh

    - name: Install Sweet Theme
      become: true
      git: 
        repo: https://github.com/EliverLara/Sweet
        dest: /usr/share/themes/Sweet
        version: "Ambar-Blue-Dark"

    - name: Remove existing GTK 4 CSS files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ansible_env.HOME }}/.config/gtk-4.0/gtk.css"
        - "{{ ansible_env.HOME }}/.config/gtk-4.0/gtk-dark.css"
        - "{{ ansible_env.HOME }}/.config/gtk-4.0/assets"

    - name: Remove existing GTK 3 CSS files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ansible_env.HOME }}/.config/gtk-3.0/gtk.css"
        - "{{ ansible_env.HOME }}/.config/gtk-3.0/gtk-dark.css"
        - "{{ ansible_env.HOME }}/.config/gtk-3.0/assets"

    - name: Create symbolic links for GTK 4 CSS files
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
        force: true
        ignore_errors: true
      loop:
        - { src: "/usr/share/themes/Sweet/gtk-4.0/gtk.css", dest: "{{ ansible_env.HOME }}/.config/gtk-4.0/gtk.css" }
        - { src: "/usr/share/themes/Sweet/gtk-4.0/gtk-dark.css", dest: "{{ ansible_env.HOME }}/.config/gtk-4.0/gtk-dark.css" }
        - { src: "/usr/share/themes/Sweet/gtk-4.0/assets", dest: "{{ ansible_env.HOME }}/.config/gtk-4.0/assets" }

    - name: Create symbolic links for GTK 3 CSS files
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - { src: "/usr/share/themes/Sweet/gtk-3.0/gtk.css", dest: "{{ ansible_env.HOME }}/.config/gtk-3.0/gtk.css" }
        - { src: "/usr/share/themes/Sweet/gtk-3.0/gtk-dark.css", dest: "{{ ansible_env.HOME }}/.config/gtk-3.0/gtk-dark.css" }
        - { src: "/usr/share/themes/Sweet/assets", dest: "{{ ansible_env.HOME }}/.config/gtk-3.0/assets" }

    - name: Reload dconf Config
      become: true
      command: dconf update
